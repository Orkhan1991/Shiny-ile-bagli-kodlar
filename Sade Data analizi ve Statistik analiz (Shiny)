Sade Data analizi ve Statistik analiz


library(shiny)

#ui

ui <- fluidPage(
  
  
  titlePanel(h1("Shiny`də Fayl Yükləmə və Sadə Statistik Analizlər", align="center")),
  
  
  sidebarLayout(
    
    sidebarPanel(
      
      fileInput(inputId = "Fayl",
                label="Bir Fayl Secin", multiple = TRUE),
      checkboxInput(inputId = "header",
                    label = "Header",
                    value = TRUE),
      radioButtons(inputId = "sep",
                   label="Separator",
                   choices = c("Comma"= ",", "Semicolon"= ";", "Tab"="\t"),
                   selected=";" ),
      radioButtons(inputId = "disp",
                   label="Display",
                   choices=c(Head="head", All= "all" ),
                   selected= "head"),
      selectInput(inputId = "var",
                  label= "Degisken",
                  choices = c("Age" = 1, "CHD" = 2, "AGRP" = 3),
                  selected='Age'),
      selectInput(inputId = "col",
                  label= "Bir reng secin",
                  choices = c("Red","Green", "Yellow"),
                  selected= "Red")
    ),
    mainPanel(
      tabsetPanel(
        tabPanel(title="Melumatlar",
                 tableOutput("data_out")),
        tabPanel(title= "Struktura",
                 verbatimTextOutput("str_out")),
        tabPanel(title= "Summary",
                 verbatimTextOutput("sum_out")),
        tabPanel(title= "Histogram",
                 plotOutput("hist_out"))
        
      )
    )
  )
)

#server
server <- function(input, output, session) {
  
  data <-reactive( {
    
    req(input$Fayl)
    
    df<- read.csv(file= input$Fayl$datapath,
                  header = input$header,
                  sep = input$sep)
    if (input$disp== "head"){
      return(head(df))
    }else{
      return(df)
      
    }
  })
      output$data_out <- renderTable({
        data()
      })
      output$str_out <- renderPrint({
        str(data())
      })
      output$sum_out <- renderPrint({
        summary(data())
      })
  output$hist_out <- renderPlot({
    colm <- as.numeric(input$var)
    col_n <- as.numeric(input$col)
    hist(data()[,colm], col= input$col)
    })
}
shinyApp(ui, server)
